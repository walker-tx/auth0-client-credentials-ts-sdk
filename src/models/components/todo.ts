/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Todo = {
  id: string;
  title: string;
  completed: boolean;
};

/** @internal */
export const Todo$inboundSchema: z.ZodType<Todo, z.ZodTypeDef, unknown> = z
  .object({
    id: z.string(),
    title: z.string(),
    completed: z.boolean(),
  });

/** @internal */
export type Todo$Outbound = {
  id: string;
  title: string;
  completed: boolean;
};

/** @internal */
export const Todo$outboundSchema: z.ZodType<Todo$Outbound, z.ZodTypeDef, Todo> =
  z.object({
    id: z.string(),
    title: z.string(),
    completed: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Todo$ {
  /** @deprecated use `Todo$inboundSchema` instead. */
  export const inboundSchema = Todo$inboundSchema;
  /** @deprecated use `Todo$outboundSchema` instead. */
  export const outboundSchema = Todo$outboundSchema;
  /** @deprecated use `Todo$Outbound` instead. */
  export type Outbound = Todo$Outbound;
}
